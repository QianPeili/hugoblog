<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 爪子</title>
    <link>qianpeili.github.io/tags/linux/</link>
    <description>Recent content in Linux on 爪子</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 16 Aug 2017 21:10:24 +0800</lastBuildDate>
    
	<atom:link href="qianpeili.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>升级 GCC 来解决 heapdump build Error</title>
      <link>qianpeili.github.io/posts/%E5%8D%87%E7%BA%A7gcc%E8%A7%A3%E5%86%B3heapdump%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AF/</link>
      <pubDate>Wed, 16 Aug 2017 21:10:24 +0800</pubDate>
      
      <guid>qianpeili.github.io/posts/%E5%8D%87%E7%BA%A7gcc%E8%A7%A3%E5%86%B3heapdump%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AF/</guid>
      <description>今天要部署一个node.js的项目，第一次玩node.js有点崩溃。安装依赖的时候一个heapdump库出现了build error。
在github上找到了类似的issue： [error] heapdump@0.3.7 Build Error · Issue #72 · bnoordhuis/node-heapdump
里面提到的解决方式是升级GCC：
 Well, I have fixed it!
My gcc version is 4.6.3 when I update to 4.9.1 and retry it work!
 我查看了一下机器的gcc版本，是 4.4.7 的，问题应该就在这了。所以安装一个新版本的gcc应该就行了。
国内为了速度可以选择中科院的镜像： Index of /gnu/gcc/
我选择了 6.1.0 版本，下载源码后简单地根据官方教程 InstallingGCC - GCC Wiki 进行安装。
tar xzf gcc-6.1.0.tar.gz cd gcc-6.1.0 ./contrib/download_prerequisites cd .. mkdir objdir cd objdir $PWD/../gcc-6.1.0/configure --prefix=$HOME/gcc-6.1.0 --disable-multilib  因为gcc编译真的要好久好久，所以我用上了全部 cpu 核心。
make -j 16 make -j 16 install  替换旧版的gcc</description>
    </item>
    
    <item>
      <title>Bash输出重定向</title>
      <link>qianpeili.github.io/posts/%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Sun, 09 Jul 2017 15:20:36 +0800</pubDate>
      
      <guid>qianpeili.github.io/posts/%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description>对 bash 命令一直不太熟，每次使用 nohup 命令都要从网上现找。 有时会看到一些命令后面跟着 &amp;quot;2&amp;gt;&amp;amp;1&amp;quot; 的参数。比如
nohupy python test.py &amp;gt; test.log 2&amp;gt;&amp;amp;1  之前也没有多管，直接用了。前几天又在其他人的 shell 脚本中看到 &amp;quot;2&amp;gt;&amp;amp;1&amp;quot;, 才想起去了解一下 ，现把内容整理一下做记录。
主要内容借鉴于Bash One-Liners Explained, Part III: All about redirections - good coders code, great coders reuse，原文非常详细，欢迎访问原文。
当 bash 启动时，会开启三个标准文件描述符：stdin, stdout, stderr。
它们都指向了 /dev/tty0 即我们当前使用的控制台。 0 代表 stdin， 1 代表 stdout, 2 代表stderr。
当我们输入一个命令：
python test.py &amp;gt; file  &amp;gt; 就是输出重定向运算符，bash 首先会以写的形式打开 file，成功后上述命令的 stdout 就会被发送到这个打开的 file 中。如果打开失败，则整个命令失败。
python test.py &amp;gt; file 命令等同于 python test.</description>
    </item>
    
    <item>
      <title>tcpdump的使用实例</title>
      <link>qianpeili.github.io/posts/tcpdump%E7%9A%84%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Sat, 20 May 2017 13:46:45 +0800</pubDate>
      
      <guid>qianpeili.github.io/posts/tcpdump%E7%9A%84%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</guid>
      <description>介绍 tcpdump 是 Linux 系统下进行网络分析的重要工具，我也因为对抓包这一块有些好奇，就找了些资料学习，然后整理成这篇文章。
使用说明 命令模式：
tcpdump [ -AbdDefhHIJKlLnNOpqStuUvxX# ] [ -B buffer_size ] [ -c count ] [ -C file_size ] [ -G rotate_seconds ] [ -F file ] [ -i interface ] [ -j tstamp_type ] [ -m module ] [ -M secret ] [ --number ] [ -Q in|out|inout ] [ -r file ] [ -V file ] [ -s snaplen ] [ -T type ] [ -w file ] [ -W filecount ] [ -E spi@ipaddr algo:secret,.</description>
    </item>
    
    <item>
      <title>unicode小技巧</title>
      <link>qianpeili.github.io/posts/unicode%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Fri, 07 Apr 2017 10:20:30 +0800</pubDate>
      
      <guid>qianpeili.github.io/posts/unicode%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>今天遇到一个问题
在mysql查询日志时，发现一些unicode字符串存储变成了
u7528u6237u53d6u6d88u8ba2u5355u8bf7u6c42  这个形式，手动加\虽然可行，但毕竟不是长久的办法
所以最好的办法是将字符串中的内容，根据unicode格式转换成unicode
代码如下:
import re a = &amp;quot;u7528u6237u53d6u6d88u8ba2u5355u8bf7u6c42&amp;quot; pattern = re.compile(&amp;quot;\u(.{4})&amp;quot;) maps = pattern.findall(a) s = &amp;quot;&amp;quot; for i in maps: tmp = unichr(int(i, 16)) s += tmp print s  就会输出原先代表的文字意思了
注： 以上是代码是python2版本， python3需要把unichr改成chr</description>
    </item>
    
  </channel>
</rss>